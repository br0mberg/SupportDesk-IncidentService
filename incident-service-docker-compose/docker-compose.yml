version: '3.8'

services:

  incident-postgres:
    image: postgres:latest
    container_name: incident-postgres
    environment:
      POSTGRES_DB: incident_service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - incident_postgres_data:/var/lib/postgresql/data
    networks:
      - support-network

  keycloak:
    image: quay.io/keycloak/keycloak:24.0
    container_name: keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://incident-postgres:5432/incident_service
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
      KC_IMPORT: /opt/keycloak/data/import/incident-management-realm.json
      KC_HTTPS_ENABLED: false
    volumes:
      - ./keycloak:/opt/keycloak/data/import
    depends_on:
      incident-postgres:
        condition: service_healthy
    ports:
      - "8080:8080"
    command: start-dev --import-realm
    networks:
      - support-network

  kafka1:
    image: bitnami/kafka:3.9
    container_name: kafka1
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094,INTERNAL://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka1:9092,EXTERNAL://localhost:9094, INTERNAL://kafka1:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka1:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_KRAFT_CLUSTER_ID=r4zt_wrqTRuT7W2NJsB_GA
      - KAFKA_CFG_MAX_REQUEST_SIZE=209715200
      - KAFKA_CFG_MESSAGE_MAX_BYTES=209715200
      - KAFKA_CFG_REPLICA_FETCH_MAX_BYTES=209715200
      - KAFKA_CFG_CONSUMER_FETCH_MAX_WAIT_MS=5000
      - KAFKA_CFG_CONSUMER_SESSION_TIMEOUT_MS=30000
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_NUM_PARTITIONS=3
      - KAFKA_CFG_DEFAULT_REPLICATION_FACTOR=1
      - KAFKA_JMX_ENABLED=true
      - KAFKA_JMX_PORT=5555
    ports:
      - "9092:9092"
      - "9094:9094"
      - "9093:9093"
      - "5555:5555"
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - support-network

  incident-service:
    build:
      context: ../
      dockerfile: Dockerfile
    environment:
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://keycloak:8080/realms/IncidentManagement
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka1:9092
      SPRING_DATASOURCE_URL: jdbc:postgresql://incident-postgres:5432/incident_service
    ports:
      - "8081:8081"
    depends_on:
      - incident-postgres
      - kafka1
      - keycloak
    networks:
      - support-network

  # Prometheus (только для сбора метрик)
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - support-network

  # Grafana для визуализации
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana  # Сохранение дашбордов
    environment:
      GF_SECURITY_ADMIN_PASSWORD: "admin"  # Пароль по умолчанию
    depends_on:
      - prometheus
    networks:
      - support-network

  kafkaui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8989:8080"
    environment:
      - DYNAMIC_CONFIG_ENABLED="true"
      - KAFKA_CLUSTERS_0_NAME=r4zt_wrqTRuT7W2NJsB_GA
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka1:9092
    depends_on:
      - kafka1
    networks:
      - support-network

volumes:
  grafana_data:
  image_postgres_data:
  minio_data:
  incident_postgres_data:
  kafka_data:

networks:
  support-network:
    external: true
    name: support-network
