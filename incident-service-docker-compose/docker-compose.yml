volumes:
  volume1:
  postgres-data:

services:
  kafka1:
    image: 'bitnami/kafka:3.9'
    container_name: kafka1
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka1:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_KRAFT_CLUSTER_ID=r4zt_wrqTRuT7W2NJsB_GA
      - KAFKA_CFG_MAX_REQUEST_SIZE=20971520
      - KAFKA_CFG_MESSAGE_MAX_BYTES=20971520
      - KAFKA_CFG_REPLICA_FETCH_MAX_BYTES=20971520
      - KAFKA_CFG_CONSUMER_FETCH_MAX_WAIT_MS=5000
      - KAFKA_CFG_CONSUMER_SESSION_TIMEOUT_MS=30000
    ports:
      - "9092:9092"
    volumes:
      - volume1:/bitnami/kafka

  kafka-ui:
    container_name: kafka-ui
    image: 'provectuslabs/kafka-ui:latest'
    ports:
      - "8383:8383"
    environment:
      - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=kafka1:9092
      - KAFKA_CLUSTERS_0_NAME=r4zt_wrqTRuT7W2NJsB_GA
      - SERVER_PORT=8383

  create-topics:
    image: 'bitnami/kafka:3.3.1'
    container_name: create-topics
    depends_on:
      - kafka1
    entrypoint: |
      sh -c "
      sleep 20;
      kafka-topics.sh --create --topic delete-image-topic --bootstrap-server kafka1:9092 --partitions 1 --replication-factor 1
      kafka-topics.sh --create --topic delete-image-topic-dlt --bootstrap-server kafka1:9092 --partitions 1 --replication-factor 1
      "

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_DB: incident_service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - incident-service-network

  incident-service:
    build:
      context: ../
      dockerfile: Dockerfile
    depends_on:
      - postgres
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/incident_service
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 9320
    ports:
      - "8081:8081"
    networks:
      - incident-service-network

networks:
  incident-service-network:
    driver: bridge